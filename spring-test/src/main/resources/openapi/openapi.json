{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample API with Different Responses",
    "version": "v1"
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID of the product to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "summary": "Create a new order",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user creating the order."
          },
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the product being ordered."
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The quantity of the product being ordered."
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "name", "email"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": ["id", "name", "price"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Order": {
        "type": "object",
        "required": ["id", "userId", "productId", "quantity", "totalAmount"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          }
        }
      }
    }
  }
}